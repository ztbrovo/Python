# Python's design goals :
# 1. A simple and intuitive language and as powerful as the main competitor；
# 2. Open source so that anyone can contribute to it；
# 3. The code is as easy to understand as English；
# 4. Suitable for daily tasks of short-term development.
# design concepts : Elegant, clear and simple.
# Features : 
# 1. It is a fully object-oriented language；To solve a problem first consider who will do it.Functions, modules, numbers, strings,etc.
# 2. Have a powerful standard library；
# 3. A large number of third-party modules which involves CS, AI, ML, etc.


#####  01. First HelloPython Program #####
# The python source program is a text file in a special format; The file extension is usually .py
# step: create 01-HelloPython.py file and edit as follows and execute this file using command python 01-HelloPython.py　in terminal.
print("hello python")
print("hello world")
# The function of print is to output the content inside the "" to the screen.
# frequent bugs: Misspell → NameError; Write multiple print functions on one line →　SyntaxError →　attention: Each line of code is responsible for completing an action.
# Indentation error →　IndentationError →　Attention: Do not add spaces before each line of code.
# Python 2.x defaultly do not support Chinese which Python 3.x supports. command python3 01-HelloPython.py
# Ipython I- interaction
# Python's IDE -- Pycharm , Integrated Development Environment

# annotation   # or """
                  """
# How to use annotation? Comments are not as many as possible; For complex operations, comments should be written before the operation starts; 
                       Add comments at the end of the line for code that cannot be understood immediately; Don’t describe the code, but explain why it’s written like this.
# Arithmetic Operator: + - * /  // 9//2=4  % 9%2=1  ** 2**3=8  "-" * 10 '----------'
                    precedence **       * / //%      + -
# The program is used to process data. Variables are used to store data.


#####  Variables  #####
# Each variable must be assigned a value before use.(=)

print(x)
type(x)
string = input("x")
int(x)
float(x)
%s %d %f %%  print("Format string" % string1)  print("Format string" % (string1,string2))   %06d  %.2f

Identifiers(variable names or function names) and keywords(used identifiers by python).
letters, numbers and _ and can not be started with numbers and repeated with keywords. Identifiers need to be case sensitive.
Variable naming: first_name is better than FirstName or firstName.

(if)
if condition:
    to , 
else:
    to 

Comparison operator: ==  !=  >  <  >=  <=
and or not

elif

if condition1: 
    to 
elif condition2:
    to
elif condition3:
    to
else:
    to
condition1,2,3 are the same level
    
nested if

if condition1:
    to1
    if condition2:
        to2
    else:
        to
else:

if (()
        or ()
        or ()):
is better than
if () or () or ():


# Random number processing
import random
random.  Click the tab key to confirm all random function.
random.randint(a, b)
# attention :When importing the toolkit, the imported statement should be placed at the top of the file. 
             Because this makes it easy for the code below to use the tools in the toolkit whenever you need it.


# cycle
Three methods of program development: sequence (from top to bottom), branch (judgment according to conditions), loop (repeated execution of specific code)
# while loop
Let the executed code be executed repeatedly according to the specified number of times.

Initial conditions
while (Determine whether the counter reaches the target number of times):
    What to do when the conditions are met1
    What to do when the conditions are met2
    What to do when the conditions are met3
    
    Processing conditions (counter + 1)
# Endless loop: Forgetting to modify the judgment condition of the loop inside the loop, causing the loop to continue to execute, and the program cannot be terminated.

# Assignment operator
=      c = a + b
+=     c += a equivalent to c = c + a
-=     c -= a equivalent to c = c - a
*=     ....
/=     .... 
//=  quzhengchu    ....
%=   quyushu    ....

# Python's counting method: Unless special requirements are required, the count of cycles starts from 0.
# Cyclic calculation
 step1' define a variable above the while funtion to store the final calculation results.
 step2' Inside the loop, each loop uses the latest calculation result to update the previously defined variables.

# often used in the cycle: break and continue.
break: when satify some requirements, exit the loop and no longer execute subsequent repeated codes.
continue: when satify some requirements, stop execute subsequent repeated codes.

# while loop nesting
while (Determine whether the counter reaches the target number of times):
    What to do when the conditions are met1
    What to do when the conditions are met2
    What to do when the conditions are met3
    
    while (Determine whether the counter reaches the target number of times):
        What to do when the conditions are met1
        What to do when the conditions are met2
        What to do when the conditions are met3
    
        Processing conditions2 (counter + 1)
    Processing conditions1 (counter + 1)

print("*", end="") 
print("*")   dont't change the row

Escape character in string
\\
\'
\"
\n
\t    Align text in columns vertically without using a table.
\r
---------------------------------------------------------------------------2020.05.03


# Function basis
Function' Combine code blocks with independent functions into a small module and call it when needed
step' define and use.

# define a function
def name_of_function():
    """comment method of function"""
    code
    ....
# F8 step over and F7 step into in Pycharm

# return

# Nested function call

# module
Every python source code file ending with the extension py is a module.
The global variables and functions defined in the module are tools that the module can provide to the outside world for direct use.
use import        py→pyc to speed up


# High-grade variation type
 list, original composition, dictionary, character skewer, public method, variable amount
# List
 List: python used most frequently number type, in other languages usually screaming number set.
 Dedicated to storing a piece of information.
 Use [] to define the list, use , to isolate
 The index of the list starts at 0.
 len(list) the length of the list: n + 1
 list.count(data) The number of times the data appears in the list.
 # List common operations
 in ipython: name_list = []
             name_list. then click tab key.
 list.sort()
 list.sort(reverse_True)
 list.reverse()
 ...
 
 # if forgot the information of the function, choose that function and click Ctrl + Q.
 
 # difference of keyword, function, method
 # keyword do not need ()
import keyword
print(keyword.kwlist)
['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']
# function needs to remember and needs () 
function()
# method needs ()
object.method()
 
# Loop traversal --for
# Get data from the list sequentially from beginning to end.
for name in function:
    print(name)
# situation
Although different data can be stored in the python list, in development, more application scenarios are
the list stores the same type of data, and through iterative traversal, the same operation is performed for each element in the loop.
 
 
